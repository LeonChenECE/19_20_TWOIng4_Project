{"ast":null,"code":"var _jsxFileName = \"/Users/leonchen/Documents/Cours/Web/19_20_TWOIng4_Project/frontend/src/components/CreateMeasure.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport default class CreateMeasure extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeType = this.onChangeType.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onChangeSensorID = this.onChangeSensorID.bind(this);\n    this.onChangeValue = this.onChangeValue.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      type: '',\n      creationDate: new Date(),\n      sensorID: '',\n      sensors: [],\n      values: 0\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/sensor/').then(response => {\n      if (response.data.length > 0) {\n        this.setState({\n          sensors: response.data.map(sensor => sensor._id),\n          sensorID: response.data[0]._id\n        });\n      }\n    });\n  }\n\n  onChangeType(e) {\n    this.setState({\n      type: e.target.value\n    });\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      creationDate: date\n    });\n  }\n\n  onChangeSensorID(e) {\n    this.setState({\n      sensorID: e.target.value\n    });\n  }\n\n  onChangeValue(e) {\n    this.setState({\n      values: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const measure = {\n      type: this.state.type,\n      creationDate: this.state.creationDate,\n      sensorID: this.state.sensorID,\n      value: this.state.values\n    };\n    console.log(measure);\n    axios.post('http://localhost:5000/measure/add', measure).then(res => console.log(res.data)).catch(error => {\n      console.log(error);\n    });\n    window.location = '/MeasureList';\n  }\n\n  render() {\n    return (//Formulaire\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Create a New Measure\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \" Sensor ID: \"), React.createElement(\"select\", {\n        ref: \"sensorInput\",\n        required: true,\n        className: \"form-control\",\n        value: this.onChangeSensorID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.state.sensors.map(function (sensor) {\n        return React.createElement(\"option\", {\n          key: sensor,\n          value: sensor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, sensor);\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \" Type (temperature, humidity, airPollution): \"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control\",\n        value: this.state.type,\n        onChange: this.onChangeType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \" Creation Date (MM/DD/YYYY): \"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control\",\n        value: this.state.creationDate,\n        onChange: this.onChangeDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \" Measurement Value: \"), React.createElement(\"input\", {\n        type: \"number\",\n        required: true,\n        className: \"form-control\",\n        value: this.state.values,\n        onChange: this.onChangeValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Create\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }))))\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/leonchen/Documents/Cours/Web/19_20_TWOIng4_Project/frontend/src/components/CreateMeasure.js"],"names":["React","Component","axios","DatePicker","CreateMeasure","constructor","props","onChangeType","bind","onChangeDate","onChangeSensorID","onChangeValue","onSubmit","state","type","creationDate","Date","sensorID","sensors","values","componentDidMount","get","then","response","data","length","setState","map","sensor","_id","e","target","value","date","preventDefault","measure","console","log","post","res","catch","error","window","location","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class CreateMeasure extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.onChangeType = this.onChangeType.bind(this);\n\t\tthis.onChangeDate = this.onChangeDate.bind(this);\n\t\tthis.onChangeSensorID = this.onChangeSensorID.bind(this);\n\t\tthis.onChangeValue = this.onChangeValue.bind(this);\n\t\tthis.onSubmit = this.onSubmit.bind(this);\n\n\t\tthis.state = {\n\t\t\ttype: '',\n\t\t\tcreationDate: new Date(),\n\t\t\tsensorID: '',\n\t\t\tsensors: [],\n\t\t\tvalues: 0\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\taxios.get('http://localhost:5000/sensor/')\n\t\t\t.then(response => {\n\t\t\t\tif(response.data.length > 0) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tsensors: response.data.map(sensor=> sensor._id),\n\t\t\t\t\t\tsensorID: response.data[0]._id\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\tonChangeType(e) {\n\t\tthis.setState({\n\t\t\ttype: e.target.value\n\t\t});\n\t}\n\n\tonChangeDate(date) {\n\t\tthis.setState({\n\t\t\tcreationDate: date\n\t\t});\n\t}\n\n\tonChangeSensorID(e) {\n\t\tthis.setState({\n\t\t\tsensorID: e.target.value\n\t\t});\n\t}\n\n\tonChangeValue(e) {\n\t\tthis.setState({\n\t\t\tvalues: e.target.value\n\t\t});\n\t}\n\n\tonSubmit(e) {\n\t\te.preventDefault();\n\n\t\tconst measure = {\n\t\t\ttype: this.state.type,\n\t\t\tcreationDate: this.state.creationDate,\n\t\t\tsensorID: this.state.sensorID,\n\t\t\tvalue: this.state.values,\n\t\t}\n\n\t\tconsole.log(measure);\n\n\t\taxios.post('http://localhost:5000/measure/add', measure)\n\t\t\t.then(res => console.log(res.data))\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t})\n\n\t\twindow.location = '/MeasureList';\n\t}\n\n\trender() {\n\t\treturn(\n\n\t\t\t//Formulaire\n\t\t\t<div>\n\t\t\t\t<h3>Create a New Measure</h3>\n\t\t\t\t<form onSubmit={this.onSubmit}>\n\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label> Sensor ID: </label>\n\t\t\t\t\t\t<select ref=\"sensorInput\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tvalue={this.onChangeSensorID}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.state.sensors.map(function(sensor) {\n\t\t\t\t\t\t\t\treturn <option\n\t\t\t\t\t\t\t\tkey={sensor}\n\t\t\t\t\t\t\t\tvalue={sensor}>\n\t\t\t\t\t\t\t\t{sensor}\n\t\t\t\t\t\t\t\t</option>;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label> Type (temperature, humidity, airPollution): </label>\n\t\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tvalue={this.state.type}\n\t\t\t\t\t\t\tonChange={this.onChangeType}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label> Creation Date (MM/DD/YYYY): </label>\n\t\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tvalue={this.state.creationDate}\n\t\t\t\t\t\t\tonChange={this.onChangeDate}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label> Measurement Value: </label>\n\t\t\t\t\t\t<input type=\"number\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tvalue={this.state.values}\n\t\t\t\t\t\t\tonChange={this.onChangeValue}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input type=\"submit\" value=\"Create\" className=\"btn btn-primary\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\n\t\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}