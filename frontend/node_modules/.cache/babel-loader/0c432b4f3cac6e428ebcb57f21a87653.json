{"ast":null,"code":"var _jsxFileName = \"/Users/leonchen/Documents/Cours/Web/19_20_TWOIng4_Project/frontend/src/components/EditMeasure.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport default class EditMeasure extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeType = this.onChangeType.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onChangeSensorID = this.onChangeSensorID.bind(this);\n    this.onChangeValue = this.onChangeValue.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      type: '',\n      creationDate: new Date(),\n      sensorID: '',\n      sensors: [],\n      values: 0\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/measure/' + this.props.match.params.id).then(response => {\n      this.setState({\n        type: response.data.type,\n        creationDate: response.data.creationDate,\n        values: response.data.value,\n        sensorID: response.data.sensorID\n      });\n    });\n  }\n\n  onChangeType(e) {\n    this.setState({\n      type: e.target.value\n    });\n  }\n\n  onChangeDate(e) {\n    this.setState({\n      creationDate: e.target.value\n    });\n  }\n\n  onChangeSensorID(e) {\n    this.setState({\n      sensorID: e.target.value\n    });\n  }\n\n  onChangeValue(e) {\n    this.setState({\n      values: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const measure = {\n      type: this.state.type,\n      creationDate: this.state.creationDate,\n      sensorID: this.state.sensorID,\n      value: this.state.values\n    };\n    console.log(measure);\n    axios.post('http://localhost:5000/measure/update/' + this.props.match.params.id, measure).then(res => console.log(res.data)).catch(error => {\n      console.log(error);\n    });\n    window.location = '/MeasureList';\n  }\n\n  render() {\n    return (//Formulaire\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Edit  Measure\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \" Sensor's ID: \"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control\",\n        value: this.state.sensorID,\n        onChange: this.onChangeSensorID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \" Type (temperature, humidity, airPollution): \"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control\",\n        value: this.state.type,\n        onChange: this.onChangeType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \" Measurement Value: \"), React.createElement(\"input\", {\n        type: \"number\",\n        required: true,\n        className: \"form-control\",\n        value: this.state.values,\n        onChange: this.onChangeValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Creation Date: \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        selected: this.state.date,\n        onChange: this.onChangeDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Create\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }))))\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/leonchen/Documents/Cours/Web/19_20_TWOIng4_Project/frontend/src/components/EditMeasure.js"],"names":["React","Component","axios","DatePicker","EditMeasure","constructor","props","onChangeType","bind","onChangeDate","onChangeSensorID","onChangeValue","onSubmit","state","type","creationDate","Date","sensorID","sensors","values","componentDidMount","get","match","params","id","then","response","setState","data","value","e","target","preventDefault","measure","console","log","post","res","catch","error","window","location","render","date"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class EditMeasure extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.onChangeType = this.onChangeType.bind(this);\n\t\tthis.onChangeDate = this.onChangeDate.bind(this);\n\t\tthis.onChangeSensorID = this.onChangeSensorID.bind(this);\n\t\tthis.onChangeValue = this.onChangeValue.bind(this);\n\t\tthis.onSubmit = this.onSubmit.bind(this);\n\n\t\tthis.state = {\n\t\t\ttype: '',\n\t\t\tcreationDate: new Date,\n\t\t\tsensorID: '',\n\t\t\tsensors: [],\n\t\t\tvalues: 0\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\taxios.get('http://localhost:5000/measure/'+this.props.match.params.id)\n\t\t\t.then(response => {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttype: response.data.type,\n\t\t\t\t\tcreationDate: response.data.creationDate,\n\t\t\t\t\tvalues : response.data.value,\n\t\t\t\t\tsensorID: response.data.sensorID\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\tonChangeType(e) {\n\t\tthis.setState({\n\t\t\ttype: e.target.value\n\t\t});\n\t}\n\n\tonChangeDate(e) {\n\t\tthis.setState({\n\t\t\tcreationDate: e.target.value\n\t\t});\n\t}\n\n\tonChangeSensorID(e) {\n\t\tthis.setState({\n\t\t\tsensorID: e.target.value\n\t\t});\n\t}\n\n\tonChangeValue(e) {\n\t\tthis.setState({\n\t\t\tvalues: e.target.value\n\t\t});\n\t}\n\n\tonSubmit(e) {\n\t\te.preventDefault();\n\n\t\tconst measure = {\n\t\t\ttype: this.state.type,\n\t\t\tcreationDate: this.state.creationDate,\n\t\t\tsensorID: this.state.sensorID,\n\t\t\tvalue: this.state.values,\n\t\t}\n\n\t\tconsole.log(measure);\n\n\t\taxios.post('http://localhost:5000/measure/update/'+this.props.match.params.id, measure)\n\t\t\t.then(res => console.log(res.data))\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t})\n\n\t\twindow.location = '/MeasureList';\n\t}\n\n\trender() {\n\t\treturn(\n\n\t\t\t//Formulaire\n\t\t\t<div>\n\t\t\t\t<h3>Edit  Measure</h3>\n\t\t\t\t<form onSubmit={this.onSubmit}>\n\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label> Sensor's ID: </label>\n\t\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tvalue={this.state.sensorID}\n\t\t\t\t\t\t\tonChange={this.onChangeSensorID}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label> Type (temperature, humidity, airPollution): </label>\n\t\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tvalue={this.state.type}\n\t\t\t\t\t\t\tonChange={this.onChangeType}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label> Measurement Value: </label>\n\t\t\t\t\t\t<input type=\"number\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tvalue={this.state.values}\n\t\t\t\t\t\t\tonChange={this.onChangeValue}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t          <label>Creation Date: </label>\n\t\t\t          <div>\n\t\t\t            <DatePicker\n\t\t\t              selected={this.state.date}\n\t\t\t              onChange={this.onChangeDate}\n\t\t\t            />\n\t\t\t          </div>\n\t\t\t        </div>\n\t\t\t        \n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input type=\"submit\" value=\"Create\" className=\"btn btn-primary\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\n\t\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}